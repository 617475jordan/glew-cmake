CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )
PROJECT( "glew" )

SET( SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src )
SET( INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include )

SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib )
SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin )

INCLUDE_DIRECTORIES( ${INCLUDE_DIR} )

IF( NOT USE_GLU )
	ADD_DEFINITIONS( -DGLEW_NO_GLU )
ENDIF(  )

ADD_LIBRARY( libglew_static STATIC ${SRC_DIR}/glew.c )
ADD_LIBRARY( libglew_shared SHARED ${SRC_DIR}/glew.c )

SET_PROPERTY( TARGET libglew_static PROPERTY ARCHIVE_OUTPUT_NAME "libglew" )
IF( WIN32 )
	SET_PROPERTY( TARGET libglew_shared PROPERTY RUNTIME_OUTPUT_NAME "glew" )
ELSE(  )
	SET_PROPERTY( TARGET libglew_shared PROPERTY LIBRARY_OUTPUT_NAME "libglew" )
ENDIF(  )

IF( ${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR} )
	ADD_EXECUTABLE( glewinfo ${SRC_DIR}/glewinfo.c )
	ADD_EXECUTABLE( visualinfo ${SRC_DIR}/visualinfo.c )

	IF( UNIX )
		SET( GL_LIBRARY GL )
	ELSEIF( APPLE )
		FIND_LIBRARY( GL_LIBRARY OpenGL )
	ELSEIF( WIN32 )
		SET( GL_LIBRARY opengl32 )
	ENDIF(  )

	TARGET_LINK_LIBRARIES( glewinfo libglew_static ${GL_LIBRARY} )
	TARGET_LINK_LIBRARIES( visualinfo libglew_static ${GL_LIBRARY} )
	
ENDIF(  )
